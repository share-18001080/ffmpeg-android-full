name: Build FFmpeg Android ARM32 (Full-Features)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

permissions:
  contents: read
  actions: read

env:
  ANDROID_API_LEVEL: 21
  ANDROID_ABI: armeabi-v7a
  NDK_VERSION: r25c
  FFMPEG_VERSION: n7.1

jobs:
  build-ffmpeg-full:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android NDK r25c
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: true
          local-cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            yasm \
            nasm \
            pkg-config \
            autoconf \
            automake \
            libtool \
            git \
            wget \
            curl

      - name: Clone FFmpeg official repository
        run: |
          git clone --depth 1 --branch ${{ env.FFMPEG_VERSION }} https://git.ffmpeg.org/ffmpeg.git ffmpeg
          cd ffmpeg
          echo "FFmpeg version: $(cat VERSION)"
          echo "Commit: $(git rev-parse HEAD)"

      - name: Setup NDK env
        run: |
          echo "ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV

      - name: Create build directories
        run: |
          mkdir -p build/armeabi-v7a
          mkdir -p output/armeabi-v7a
          mkdir -p logs

      - name: Configure FFmpeg (full-features)
        working-directory: ffmpeg
        run: |
          export ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}
          TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          CC=$TOOLCHAIN/bin/armv7a-linux-androideabi21-clang
          CXX=$TOOLCHAIN/bin/armv7a-linux-androideabi21-clang++
          STRIP=$TOOLCHAIN/bin/armv7a-linux-androideabi21-strip
          AR=$TOOLCHAIN/bin/llvm-ar
          RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          SYSROOT=$TOOLCHAIN/sysroot

          ./configure \
            --prefix=../build/armeabi-v7a \
            --logfile=../logs/config.log \
            --arch=arm \
            --target-os=android \
            --enable-cross-compile \
            --cc=$CC \
            --cxx=$CXX \
            --strip=$STRIP \
            --ar=$AR \
            --ranlib=$RANLIB \
            --sysroot=$SYSROOT \
            --cpu=armv7-a \
            --extra-cflags="-fPIC -DANDROID -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -mthumb" \
            --extra-ldflags="-Wl,--fix-cortex-a8 -L$SYSROOT/usr/lib -lc -lm -ldl" \
            --pkg-config-flags="--static" \
            --disable-shared \
            --enable-static \
            --disable-doc \
            --disable-htmlpages \
            --disable-manpages \
            --disable-podpages \
            --disable-txtpages \
            --enable-programs \
            --enable-ffmpeg \
            --enable-ffplay \
            --enable-ffprobe \
            --enable-avdevice \
            --enable-avfilter \
            --enable-swscale \
            --enable-swresample \
            --enable-network \
            --enable-bzlib \
            --enable-iconv \
            --enable-libxcb \
            --enable-lzma \
            --enable-zlib \
            --enable-securetransport \
            --enable-libx264 \
            --enable-libx265 \
            --enable-libvpx \
            --enable-libfreetype \
            --enable-libmp3lame \
            --enable-libopus \
            --enable-libvorbis \
            --enable-libass \
            --enable-libfdk-aac \
            --enable-openssl \
            --enable-libxvid \
            --enable-libwebp \
            --enable-libtheora \
            --enable-libopenjpeg \
            --enable-libspeex \
            --enable-libbluray \
            --enable-gpl \
            --enable-nonfree \
            --enable-small \
            --enable-decoder=all \
            --enable-encoder=all \
            --enable-muxer=all \
            --enable-demuxer=all \
            --enable-parser=all \
            --enable-protocol=all \
            --enable-filter=all \
            --enable-bsf=all

      - name: Show config log on failure
        if: failure()
        run: |
          echo "===== CONFIG LOG ====="
          cat logs/config.log

      - name: Build FFmpeg
        working-directory: ffmpeg
        run: |
          export ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}
          make -j$(nproc)
          cp ffmpeg ../output/armeabi-v7a/

      - name: Verify binary
        run: |
          file output/armeabi-v7a/ffmpeg
          du -h output/armeabi-v7a/ffmpeg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-android-full-armeabi-v7a
          path: |
            output/armeabi-v7a/ffmpeg
            logs/config.log
